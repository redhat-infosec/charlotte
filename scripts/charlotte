#!/usr/bin/python

import charlotte
import sys
from multiprocessing import Queue
import logging
import daemon

log = logging.getLogger("charlotte")
pidfile = "/var/run/charlotte.pid"


def run():
    try:
        config = charlotte.Config(sys.argv[1])
        maps = charlotte.Maps(config)
    except charlotte.CharlotteConfigError as e:
        print("ERROR: %s" % e)
        raise SystemExit(1)

    queue = Queue(100)

    reader = charlotte.EventReader(config, queue)
    try:
        if len(sys.argv) > 2 and sys.argv[2] == "test":
            writer = charlotte.TextOutput(config, queue, maps, reader)
        else:
            writer = charlotte.DatabaseOutput(config, queue, maps)

    except Exception as e:
        log.error("There was an error starting Charlotte: %s" % e)
        raise SystemExit(2)

    reader.start()

    writer.process_alerts()
    raise SystemExit(0)

if __name__ == "__main__":

    try:
        if len(sys.argv) > 2 and sys.argv[2] == "test":
            run()
        else:
            with daemon.DaemonContext(
                    pidfile=daemon.pidlockfile.PIDLockFile(pidfile)):
                run()
    except Exception as e:
        log.exception('Error occured')
    raise SystemExit(3)
